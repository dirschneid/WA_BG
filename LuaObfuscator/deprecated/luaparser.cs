// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2010
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.4.5
// Machine:  DAV-OFFICE
// DateTime: 14.10.2011 15:26:11
// UserName: dav
// Input file <luaparser.y - 14.10.2011 15:26:04>

// options: conflicts lines gplex conflicts

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;
using QUT.Gppg;

namespace LuaObfuscator
{
public enum Tokens {
    error=1,EOF=2,Identifier=3,IntegerConst=4,DoubleConst=5,StringConst=6,
    DOUBLE_QUOTE=7,PERCENT=8,AMPERSAND=9,QUOTE=10,LEFT_PAREN=11,RIGHT_PAREN=12,
    ASTERISK=13,PLUS_SIGN=14,COMMA=15,MINUS_SIGN=16,PERIOD=17,SOLIDUS=18,
    COLON=19,SEMICOLON=20,QUESTION_MARK=21,VERTICAL_BAR=22,LEFT_BRACKET=23,RIGHT_BRACKET=24,
    LEFT_CURLYBRACKET=25,RIGHT_CURLYBRACKET=26,POWER=27,TWO_DOTS=28,THREE_DOTS=29,CAGE=30,
    EQUAL=31,OPERATOR_LT=32,OPERATOR_LE=33,OPERATOR_NE=34,OPERATOR_EQ=35,OPERATOR_GT=36,
    OPERATOR_GE=37,AND=38,BREAK=39,DO=40,ELSE=41,END=42,
    FALSE=43,FOR=44,FUNCTION=45,IF=46,ELSEIF=47,IN=48,
    LOCAL=49,NIL=50,NOT=51,OR=52,REPEAT=53,RETURN=54,
    THEN=55,TRUE=56,UNTIL=57,WHILE=58,UMINUS=59};

// Abstract base class for GPLEX scanners
public abstract class ScanBase : AbstractScanner<int,Location> {
  private Location __yylloc = new Location();
  public override Location yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

public class Parser: ShiftReduceParser<int, Location>
{
  // Verbatim content from luaparser.y - 14.10.2011 15:26:04
  // End verbatim content from luaparser.y - 14.10.2011 15:26:04

#pragma warning disable 649
  private static Dictionary<int, string> aliasses;
#pragma warning restore 649
  private static Rule[] rules = new Rule[105];
  private static State[] states = new State[178];
  private static string[] nonTerms = new string[] {
      "LuaScript", "Number", "$accept", "Name", "String", "BLOCK", "_STAT", "_LASTSTAT", 
      "STAT", "LASTSTAT", "VARLIST", "EXPLIST", "FUNCTIONCALL", "EXP", "_IF", 
      "_FOR_EXP", "NAMELIST", "FUNCNAME", "FUNCBODY", "_LOCALS", "_CLASSNAME", 
      "VAR", "PREFIXEXP", "_FUNCTION", "TABLECONSTRUCTOR", "BINOP", "UNOP", "ARGS", 
      "PARLIST", "FIELDLIST", "FIELD", "_NEXT_FIELD", "FIELDSEP", "_ELSEIF", 
      };

  static Parser() {
    states[0] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145,2,-6},new int[]{-1,1,-6,3,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[1] = new State(new int[]{2,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{2,4});
    states[4] = new State(-7);
    states[5] = new State(new int[]{54,9,39,177,2,-8,42,-8,57,-8,41,-8,47,-8},new int[]{-8,6,-10,7});
    states[6] = new State(-9);
    states[7] = new State(new int[]{20,8,2,-13,42,-13,57,-13,41,-13,47,-13});
    states[8] = new State(-14);
    states[9] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84,20,-26,2,-26,42,-26,57,-26,41,-26,47,-26},new int[]{-12,10,-14,51,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[10] = new State(new int[]{15,11,20,-27,2,-27,42,-27,57,-27,41,-27,47,-27});
    states[11] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,12,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[12] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,15,-41,20,-41,2,-41,42,-41,57,-41,41,-41,47,-41,54,-41,39,-41,12,-41,40,-41},new int[]{-26,13});
    states[13] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,14,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[14] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,15,-51,20,-51,2,-51,42,-51,57,-51,41,-51,47,-51,54,-51,39,-51,12,-51,40,-51,24,-51,26,-51,55,-51,50,-51,43,-51,56,-51,4,-51,5,-51,6,-51,29,-51,45,-51,3,-51,11,-51,25,-51,59,-51,51,-51,30,-51},new int[]{-26,13});
    states[15] = new State(-79);
    states[16] = new State(-80);
    states[17] = new State(-81);
    states[18] = new State(-82);
    states[19] = new State(-83);
    states[20] = new State(-84);
    states[21] = new State(-85);
    states[22] = new State(-86);
    states[23] = new State(-87);
    states[24] = new State(-88);
    states[25] = new State(-89);
    states[26] = new State(-90);
    states[27] = new State(-91);
    states[28] = new State(-92);
    states[29] = new State(-93);
    states[30] = new State(-42);
    states[31] = new State(-43);
    states[32] = new State(-44);
    states[33] = new State(-45);
    states[34] = new State(-2);
    states[35] = new State(-3);
    states[36] = new State(-46);
    states[37] = new State(-5);
    states[38] = new State(-47);
    states[39] = new State(-48);
    states[40] = new State(new int[]{11,42},new int[]{-19,41});
    states[41] = new State(-62);
    states[42] = new State(new int[]{12,43,3,58,29,176},new int[]{-29,169,-17,173,-4,154});
    states[43] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,44,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[44] = new State(new int[]{42,45});
    states[45] = new State(-63);
    states[46] = new State(new int[]{20,47,54,-10,39,-10,2,-10,42,-10,57,-10,41,-10,47,-10});
    states[47] = new State(-11);
    states[48] = new State(new int[]{31,49,15,101});
    states[49] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-12,50,-14,51,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[50] = new State(new int[]{15,11,20,-15,54,-15,39,-15,2,-15,42,-15,57,-15,41,-15,47,-15});
    states[51] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,15,-40,20,-40,2,-40,42,-40,57,-40,41,-40,47,-40,54,-40,39,-40,12,-40,40,-40},new int[]{-26,13});
    states[52] = new State(new int[]{23,53,19,90,17,99,11,93,25,64,6,37,14,-49,16,-49,13,-49,18,-49,27,-49,8,-49,28,-49,32,-49,33,-49,36,-49,37,-49,35,-49,34,-49,38,-49,52,-49,15,-49,20,-49,2,-49,42,-49,57,-49,41,-49,47,-49,54,-49,39,-49,12,-49,40,-49,24,-49,26,-49,55,-49,50,-49,43,-49,56,-49,4,-49,5,-49,29,-49,45,-49,3,-49,59,-49,51,-49,30,-49},new int[]{-28,89,-25,97,-5,98});
    states[53] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,54,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[54] = new State(new int[]{24,55,14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29},new int[]{-26,13});
    states[55] = new State(-36);
    states[56] = new State(-53);
    states[57] = new State(-35);
    states[58] = new State(-4);
    states[59] = new State(-54);
    states[60] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,61,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[61] = new State(new int[]{12,62,14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29},new int[]{-26,13});
    states[62] = new State(-55);
    states[63] = new State(-50);
    states[64] = new State(new int[]{26,65,23,75,3,58,50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,11,60,25,64,59,82,51,83,30,84},new int[]{-30,66,-31,68,-4,85,-14,88,-2,33,-5,36,-24,39,-23,52,-22,56,-13,59,-25,63,-27,80});
    states[65] = new State(-68);
    states[66] = new State(new int[]{26,67});
    states[67] = new State(-69);
    states[68] = new State(new int[]{15,71,20,72,26,-72},new int[]{-32,69,-33,73});
    states[69] = new State(new int[]{15,71,20,72,26,-70},new int[]{-33,70});
    states[70] = new State(-71);
    states[71] = new State(-77);
    states[72] = new State(-78);
    states[73] = new State(new int[]{23,75,3,58,50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,11,60,25,64,59,82,51,83,30,84},new int[]{-31,74,-4,85,-14,88,-2,33,-5,36,-24,39,-23,52,-22,56,-13,59,-25,63,-27,80});
    states[74] = new State(-73);
    states[75] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,76,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[76] = new State(new int[]{24,77,14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29},new int[]{-26,13});
    states[77] = new State(new int[]{31,78});
    states[78] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,79,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[79] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,15,-74,20,-74,26,-74},new int[]{-26,13});
    states[80] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,81,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[81] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,15,-52,20,-52,2,-52,42,-52,57,-52,41,-52,47,-52,54,-52,39,-52,12,-52,40,-52,24,-52,26,-52,55,-52,50,-52,43,-52,56,-52,4,-52,5,-52,6,-52,29,-52,45,-52,3,-52,11,-52,25,-52,59,-52,51,-52,30,-52},new int[]{-26,13});
    states[82] = new State(-94);
    states[83] = new State(-95);
    states[84] = new State(-96);
    states[85] = new State(new int[]{31,86,23,-35,19,-35,17,-35,11,-35,25,-35,6,-35,14,-35,16,-35,13,-35,18,-35,27,-35,8,-35,28,-35,32,-35,33,-35,36,-35,37,-35,35,-35,34,-35,38,-35,52,-35,15,-35,20,-35,26,-35});
    states[86] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,87,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[87] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,15,-75,20,-75,26,-75},new int[]{-26,13});
    states[88] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,15,-76,20,-76,26,-76},new int[]{-26,13});
    states[89] = new State(-56);
    states[90] = new State(new int[]{3,58},new int[]{-4,91});
    states[91] = new State(new int[]{11,93,25,64,6,37},new int[]{-28,92,-25,97,-5,98});
    states[92] = new State(-57);
    states[93] = new State(new int[]{12,96,50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-12,94,-14,51,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[94] = new State(new int[]{12,95,15,11});
    states[95] = new State(-58);
    states[96] = new State(-59);
    states[97] = new State(-60);
    states[98] = new State(-61);
    states[99] = new State(new int[]{3,58},new int[]{-4,100});
    states[100] = new State(-37);
    states[101] = new State(new int[]{3,58,11,60},new int[]{-22,102,-4,57,-23,103,-13,59});
    states[102] = new State(new int[]{31,-34,15,-34,23,-53,17,-53,19,-53,11,-53,25,-53,6,-53});
    states[103] = new State(new int[]{23,53,17,99,19,90,11,93,25,64,6,37},new int[]{-28,89,-25,97,-5,98});
    states[104] = new State(new int[]{31,-33,15,-33,23,-53,17,-53,19,-53,11,-53,25,-53,6,-53});
    states[105] = new State(new int[]{23,-54,17,-54,19,-54,11,-54,25,-54,6,-54,20,-16,54,-16,39,-16,2,-16,42,-16,57,-16,41,-16,47,-16});
    states[106] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,107,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[107] = new State(new int[]{42,108});
    states[108] = new State(-17);
    states[109] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,110,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[110] = new State(new int[]{40,111,14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29},new int[]{-26,13});
    states[111] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,112,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[112] = new State(new int[]{42,113});
    states[113] = new State(-18);
    states[114] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,115,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[115] = new State(new int[]{57,116});
    states[116] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,117,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[117] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,20,-19,54,-19,39,-19,2,-19,42,-19,57,-19,41,-19,47,-19},new int[]{-26,13});
    states[118] = new State(-20);
    states[119] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,120,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[120] = new State(new int[]{55,121,14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29},new int[]{-26,13});
    states[121] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,122,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[122] = new State(-99,new int[]{-34,123});
    states[123] = new State(new int[]{42,124,41,125,47,165});
    states[124] = new State(-97);
    states[125] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,126,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[126] = new State(new int[]{42,127});
    states[127] = new State(-98);
    states[128] = new State(new int[]{3,58},new int[]{-4,129,-17,159});
    states[129] = new State(new int[]{31,130,48,-38,15,-38});
    states[130] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,131,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[131] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84,14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29},new int[]{-16,132,-26,13,-14,158,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[132] = new State(new int[]{40,133,15,156});
    states[133] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,134,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[134] = new State(new int[]{42,135});
    states[135] = new State(-21);
    states[136] = new State(new int[]{3,58},new int[]{-18,137,-21,139,-4,144});
    states[137] = new State(new int[]{11,42},new int[]{-19,138});
    states[138] = new State(-23);
    states[139] = new State(new int[]{17,140,19,142,11,-29});
    states[140] = new State(new int[]{3,58},new int[]{-4,141});
    states[141] = new State(-32);
    states[142] = new State(new int[]{3,58},new int[]{-4,143});
    states[143] = new State(-30);
    states[144] = new State(-31);
    states[145] = new State(new int[]{45,146,3,58},new int[]{-17,149,-4,154});
    states[146] = new State(new int[]{3,58},new int[]{-4,147});
    states[147] = new State(new int[]{11,42},new int[]{-19,148});
    states[148] = new State(-24);
    states[149] = new State(new int[]{31,150,15,152,20,-103,54,-103,39,-103,2,-103,42,-103,57,-103,41,-103,47,-103});
    states[150] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-12,151,-14,51,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[151] = new State(new int[]{15,11,20,-104,54,-104,39,-104,2,-104,42,-104,57,-104,41,-104,47,-104});
    states[152] = new State(new int[]{3,58},new int[]{-4,153});
    states[153] = new State(-39);
    states[154] = new State(-38);
    states[155] = new State(-25);
    states[156] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,157,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[157] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,40,-102,15,-102},new int[]{-26,13});
    states[158] = new State(new int[]{14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29,40,-101,15,-101},new int[]{-26,13});
    states[159] = new State(new int[]{48,160,15,152});
    states[160] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-12,161,-14,51,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[161] = new State(new int[]{40,162,15,11});
    states[162] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,163,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[163] = new State(new int[]{42,164});
    states[164] = new State(-22);
    states[165] = new State(new int[]{50,30,43,31,56,32,4,34,5,35,6,37,29,38,45,40,3,58,11,60,25,64,59,82,51,83,30,84},new int[]{-14,166,-2,33,-5,36,-24,39,-23,52,-22,56,-4,57,-13,59,-25,63,-27,80});
    states[166] = new State(new int[]{55,167,14,15,16,16,13,17,18,18,27,19,8,20,28,21,32,22,33,23,36,24,37,25,35,26,34,27,38,28,52,29},new int[]{-26,13});
    states[167] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,168,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[168] = new State(-100);
    states[169] = new State(new int[]{12,170});
    states[170] = new State(new int[]{3,58,11,60,40,106,58,109,53,114,46,119,44,128,45,136,49,145},new int[]{-6,171,-7,5,-9,46,-11,48,-22,104,-4,57,-23,103,-13,105,-15,118,-20,155});
    states[171] = new State(new int[]{42,172});
    states[172] = new State(-64);
    states[173] = new State(new int[]{15,174,12,-65});
    states[174] = new State(new int[]{29,175,3,58},new int[]{-4,153});
    states[175] = new State(-67);
    states[176] = new State(-66);
    states[177] = new State(-28);

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-3, new int[]{-1,2});
    rules[2] = new Rule(-2, new int[]{4});
    rules[3] = new Rule(-2, new int[]{5});
    rules[4] = new Rule(-4, new int[]{3});
    rules[5] = new Rule(-5, new int[]{6});
    rules[6] = new Rule(-1, new int[]{});
    rules[7] = new Rule(-1, new int[]{-6,2});
    rules[8] = new Rule(-6, new int[]{-7});
    rules[9] = new Rule(-6, new int[]{-7,-8});
    rules[10] = new Rule(-7, new int[]{-9});
    rules[11] = new Rule(-7, new int[]{-9,20});
    rules[12] = new Rule(-8, new int[]{});
    rules[13] = new Rule(-8, new int[]{-10});
    rules[14] = new Rule(-8, new int[]{-10,20});
    rules[15] = new Rule(-9, new int[]{-11,31,-12});
    rules[16] = new Rule(-9, new int[]{-13});
    rules[17] = new Rule(-9, new int[]{40,-6,42});
    rules[18] = new Rule(-9, new int[]{58,-14,40,-6,42});
    rules[19] = new Rule(-9, new int[]{53,-6,57,-14});
    rules[20] = new Rule(-9, new int[]{-15});
    rules[21] = new Rule(-9, new int[]{44,-4,31,-14,-16,40,-6,42});
    rules[22] = new Rule(-9, new int[]{44,-17,48,-12,40,-6,42});
    rules[23] = new Rule(-9, new int[]{45,-18,-19});
    rules[24] = new Rule(-9, new int[]{49,45,-4,-19});
    rules[25] = new Rule(-9, new int[]{-20});
    rules[26] = new Rule(-10, new int[]{54});
    rules[27] = new Rule(-10, new int[]{54,-12});
    rules[28] = new Rule(-10, new int[]{39});
    rules[29] = new Rule(-18, new int[]{-21});
    rules[30] = new Rule(-18, new int[]{-21,19,-4});
    rules[31] = new Rule(-21, new int[]{-4});
    rules[32] = new Rule(-21, new int[]{-21,17,-4});
    rules[33] = new Rule(-11, new int[]{-22});
    rules[34] = new Rule(-11, new int[]{-11,15,-22});
    rules[35] = new Rule(-22, new int[]{-4});
    rules[36] = new Rule(-22, new int[]{-23,23,-14,24});
    rules[37] = new Rule(-22, new int[]{-23,17,-4});
    rules[38] = new Rule(-17, new int[]{-4});
    rules[39] = new Rule(-17, new int[]{-17,15,-4});
    rules[40] = new Rule(-12, new int[]{-14});
    rules[41] = new Rule(-12, new int[]{-12,15,-14});
    rules[42] = new Rule(-14, new int[]{50});
    rules[43] = new Rule(-14, new int[]{43});
    rules[44] = new Rule(-14, new int[]{56});
    rules[45] = new Rule(-14, new int[]{-2});
    rules[46] = new Rule(-14, new int[]{-5});
    rules[47] = new Rule(-14, new int[]{29});
    rules[48] = new Rule(-14, new int[]{-24});
    rules[49] = new Rule(-14, new int[]{-23});
    rules[50] = new Rule(-14, new int[]{-25});
    rules[51] = new Rule(-14, new int[]{-14,-26,-14});
    rules[52] = new Rule(-14, new int[]{-27,-14});
    rules[53] = new Rule(-23, new int[]{-22});
    rules[54] = new Rule(-23, new int[]{-13});
    rules[55] = new Rule(-23, new int[]{11,-14,12});
    rules[56] = new Rule(-13, new int[]{-23,-28});
    rules[57] = new Rule(-13, new int[]{-23,19,-4,-28});
    rules[58] = new Rule(-28, new int[]{11,-12,12});
    rules[59] = new Rule(-28, new int[]{11,12});
    rules[60] = new Rule(-28, new int[]{-25});
    rules[61] = new Rule(-28, new int[]{-5});
    rules[62] = new Rule(-24, new int[]{45,-19});
    rules[63] = new Rule(-19, new int[]{11,12,-6,42});
    rules[64] = new Rule(-19, new int[]{11,-29,12,-6,42});
    rules[65] = new Rule(-29, new int[]{-17});
    rules[66] = new Rule(-29, new int[]{29});
    rules[67] = new Rule(-29, new int[]{-17,15,29});
    rules[68] = new Rule(-25, new int[]{25,26});
    rules[69] = new Rule(-25, new int[]{25,-30,26});
    rules[70] = new Rule(-30, new int[]{-31,-32});
    rules[71] = new Rule(-30, new int[]{-31,-32,-33});
    rules[72] = new Rule(-32, new int[]{});
    rules[73] = new Rule(-32, new int[]{-33,-31});
    rules[74] = new Rule(-31, new int[]{23,-14,24,31,-14});
    rules[75] = new Rule(-31, new int[]{-4,31,-14});
    rules[76] = new Rule(-31, new int[]{-14});
    rules[77] = new Rule(-33, new int[]{15});
    rules[78] = new Rule(-33, new int[]{20});
    rules[79] = new Rule(-26, new int[]{14});
    rules[80] = new Rule(-26, new int[]{16});
    rules[81] = new Rule(-26, new int[]{13});
    rules[82] = new Rule(-26, new int[]{18});
    rules[83] = new Rule(-26, new int[]{27});
    rules[84] = new Rule(-26, new int[]{8});
    rules[85] = new Rule(-26, new int[]{28});
    rules[86] = new Rule(-26, new int[]{32});
    rules[87] = new Rule(-26, new int[]{33});
    rules[88] = new Rule(-26, new int[]{36});
    rules[89] = new Rule(-26, new int[]{37});
    rules[90] = new Rule(-26, new int[]{35});
    rules[91] = new Rule(-26, new int[]{34});
    rules[92] = new Rule(-26, new int[]{38});
    rules[93] = new Rule(-26, new int[]{52});
    rules[94] = new Rule(-27, new int[]{59});
    rules[95] = new Rule(-27, new int[]{51});
    rules[96] = new Rule(-27, new int[]{30});
    rules[97] = new Rule(-15, new int[]{46,-14,55,-6,-34,42});
    rules[98] = new Rule(-15, new int[]{46,-14,55,-6,-34,41,-6,42});
    rules[99] = new Rule(-34, new int[]{});
    rules[100] = new Rule(-34, new int[]{-34,47,-14,55,-6});
    rules[101] = new Rule(-16, new int[]{-14});
    rules[102] = new Rule(-16, new int[]{-16,15,-14});
    rules[103] = new Rule(-20, new int[]{49,-17});
    rules[104] = new Rule(-20, new int[]{49,-17,31,-12});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
    switch (action)
    {
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliasses != null && aliasses.ContainsKey(terminal))
        return aliasses[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

#line 288 "luaparser.y"
	public string GetText(Location location)
#line 289 "luaparser.y"
	{
#line 290 "luaparser.y"
		return ((Scanner)base.Scanner).GetText(location);
#line 291 "luaparser.y"
	}
#line 292 "luaparser.y"

#line 293 "luaparser.y"
	public Parser(Scanner scanner)
#line 294 "luaparser.y"
		: base(scanner)
#line 295 "luaparser.y"
	{
#line 296 "luaparser.y"
 	}
}
}
